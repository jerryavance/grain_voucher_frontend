import { IFormField } from "../../utils/form_factory";

export const InvestorAccountFormFields = (investorOptions: { label: string; value: string }[] = []): IFormField[] => {
  return [
    {
      name: "investor_id",
      initailValue: "",
      label: "Investor",
      type: "select",
      uiType: "select",
      options: investorOptions,
      uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
      required: true,
    },
  ];
};

export const DepositFormFields = (investorAccountOptions: { label: string; value: string }[] = []): IFormField[] => [
  {
    name: 'investor_account',
    initailValue: '',
    label: 'Investor Account',
    type: 'select',
    uiType: 'select',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
    options: investorAccountOptions, // Populated dynamically in DepositForm.tsx
  },
  {
    name: 'amount',
    initailValue: '',
    label: 'Deposit Amount (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
  },
  {
    name: 'notes',
    initailValue: '',
    label: 'Notes',
    type: 'text',
    uiType: 'textarea',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    rows: 3,
  },
];

export const ProfitAgreementFormFields = (): IFormField[] => [
  {
    name: 'investor_account',
    initailValue: '',
    label: 'Investor Account',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
    options: [],
  },
  {
    name: 'profit_threshold',
    initailValue: '2.00',
    label: 'Profit Threshold (%)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'investor_share',
    initailValue: '75.00',
    label: 'Investor Share (%)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'amsaf_share',
    initailValue: '25.00',
    label: 'AMSAF Share (%)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'notes',
    initailValue: '',
    label: 'Notes',
    type: 'text',
    uiType: 'textarea',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    rows: 3,
  },
];

export const TradeFormFields = (): IFormField[] => [
  {
    name: 'grn_number',
    initailValue: '',
    label: 'GRN Number',
    type: 'text',
    uiType: 'text',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'hub_id',
    initailValue: '',
    label: 'Hub',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
    options: [],
  },
  {
    name: 'grain_type',
    initailValue: '',
    label: 'Grain Type',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
    options: [],
  },
  {
    name: 'gross_tonnage',
    initailValue: '',
    label: 'Gross Tonnage (MT)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'net_tonnage',
    initailValue: '',
    label: 'Net Tonnage (MT)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'buying_price',
    initailValue: '',
    label: 'Buying Price (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'selling_price',
    initailValue: '',
    label: 'Selling Price (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'other_expenses',
    initailValue: '0',
    label: 'Other Expenses (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
  },
  {
    name: 'total_trade_cost',
    initailValue: '',
    label: 'Total Trade Cost (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'supplier_id',
    initailValue: '',
    label: 'Supplier',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
    options: [],
  },
  {
    name: 'buyer_id',
    initailValue: '',
    label: 'Buyer',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
    options: [],
  },
  {
    name: 'payable_by_buyer',
    initailValue: '',
    label: 'Payable by Buyer (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'payment_status',
    initailValue: '',
    label: 'Payment Status',
    type: 'select',
    uiType: 'select',
    options: [
      { label: 'Paid', value: 'paid' },
      { label: 'Pending', value: 'pending' },
      { label: 'Overdue', value: 'overdue' },
    ],
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'amount_paid',
    initailValue: '0',
    label: 'Amount Paid (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
  },
  {
    name: 'payment_due_date',
    initailValue: '',
    label: 'Payment Due Date',
    type: 'date',
    uiType: 'date',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'amount_due',
    initailValue: '',
    label: 'Amount Due (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'delivery_date',
    initailValue: '',
    label: 'Delivery Date',
    type: 'date',
    uiType: 'date',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'delivery_status',
    initailValue: '',
    label: 'Delivery Status',
    type: 'select',
    uiType: 'select',
    options: [
      { label: 'Delivered', value: 'delivered' },
      { label: 'Pending', value: 'pending' },
    ],
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'amsaf_fees',
    initailValue: '0',
    label: 'AMSAF Fees (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
  },
];

export const TradeAllocationFormFields = (): IFormField[] => [
  {
    name: 'trade_id',
    initailValue: '',
    label: 'Trade',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
    options: [],
  },
  {
    name: 'investor_account_id',
    initailValue: '',
    label: 'Investor Account',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
    options: [],
  },
  {
    name: 'allocated_amount',
    initailValue: '',
    label: 'Allocated Amount (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
  },
  {
    name: 'notes',
    initailValue: '',
    label: 'Notes',
    type: 'text',
    uiType: 'textarea',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    rows: 3,
  },
];

export const LoanFormFields = (): IFormField[] => [
  {
    name: 'trade_id',
    initailValue: '',
    label: 'Trade',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
    options: [],
  },
  {
    name: 'investor_account_id',
    initailValue: '',
    label: 'Investor Account',
    type: 'select',
    uiType: 'autocomplete',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
    options: [],
  },
  {
    name: 'amount',
    initailValue: '',
    label: 'Loan Amount (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'interest_rate',
    initailValue: '0.00',
    label: 'Interest Rate (%)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
  },
  {
    name: 'due_date',
    initailValue: '',
    label: 'Due Date',
    type: 'date',
    uiType: 'date',
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'status',
    initailValue: 'pending',
    label: 'Status',
    type: 'select',
    uiType: 'select',
    options: [
      { label: 'Pending', value: 'pending' },
      { label: 'Active', value: 'active' },
      { label: 'Repaid', value: 'repaid' },
      { label: 'Defaulted', value: 'defaulted' },
    ],
    uiBreakpoints: { xs: 12, sm: 12, md: 6, lg: 6, xl: 6 },
    required: true,
  },
  {
    name: 'notes',
    initailValue: '',
    label: 'Notes',
    type: 'text',
    uiType: 'textarea',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    rows: 3,
  },
];

export const WithdrawalFormFields = (investorAccountOptions: { label: string; value: string }[] = []): IFormField[] => [
  {
    name: 'investor_account_id',
    initailValue: '',
    label: 'Investor Account',
    type: 'select',
    uiType: 'select',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
    options: investorAccountOptions, // Populated dynamically in WithdrawalForm.tsx
  },
  {
    name: 'amount',
    initailValue: '',
    label: 'Withdrawal Amount (UGX)',
    type: 'number',
    uiType: 'number',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    required: true,
  },
  {
    name: 'notes',
    initailValue: '',
    label: 'Notes',
    type: 'text',
    uiType: 'textarea',
    uiBreakpoints: { xs: 12, sm: 12, md: 12, lg: 12, xl: 12 },
    rows: 3,
  },
];

export const InvestorDetailsModalFormFields = (): IFormField[] => [
  {
    name: 'investor_account_id',
    initailValue: '',
    label: 'Investor Account ID',
    type: 'text',
    uiType: 'hidden',
    uiBreakpoints: { xs: 12 },
    required: true,
  },
];